{
  "pluginType": "JS",
  "pluginId": "js-plugin",
  "unpublishedAction": {
    "name": "approveRequest",
    "fullyQualifiedName": "LeaveRequestApi.approveRequest",
    "datasource": {
      "name": "UNUSED_DATASOURCE",
      "pluginId": "js-plugin",
      "messages": [],
      "isAutoGenerated": false,
      "deleted": false,
      "policies": [],
      "userPermissions": []
    },
    "pageId": "Manage Leave Request",
    "collectionId": "Manage Leave Request_LeaveRequestApi",
    "actionConfiguration": {
      "timeoutInMillisecond": 10000,
      "paginationType": "NONE",
      "encodeParamsToggle": true,
      "body": "async leaveRequestData => {\n  const userInfo = listStaff.data.find(c => c.Email === leaveRequestData.Email);\n  if (!userInfo) showAlert(`User ${userInfo.Email} is not existed`);\n  await updateLeaveCount.run({\n    rowIndex: userInfo.rowIndex,\n    availableLeave: userInfo['Available Leaves'] - leaveRequestData[\"Total Days\"],\n    leavesApplied: userInfo['Leaves Applied'] + leaveRequestData[\"Total Days\"]\n  });\n  await approveLeaveRequest.run({\n    rowIndex: leaveRequestData.rowIndex\n  });\n  sendEmailRequestApprove.run({\n    toEmail: leaveRequestData.Email\n  });\n  listStaff.run();\n  listLeaveRequested.run();\n}",
      "selfReferencingDataPaths": [],
      "jsArguments": [
        {}
      ],
      "isAsync": true
    },
    "executeOnLoad": false,
    "clientSideExecution": true,
    "dynamicBindingPathList": [
      {
        "key": "body"
      }
    ],
    "isValid": true,
    "invalids": [],
    "messages": [],
    "jsonPathKeys": [
      "async leaveRequestData => {\n  const userInfo = listStaff.data.find(c => c.Email === leaveRequestData.Email);\n  if (!userInfo) showAlert(`User ${userInfo.Email} is not existed`);\n  await updateLeaveCount.run({\n    rowIndex: userInfo.rowIndex,\n    availableLeave: userInfo['Available Leaves'] - leaveRequestData[\"Total Days\"],\n    leavesApplied: userInfo['Leaves Applied'] + leaveRequestData[\"Total Days\"]\n  });\n  await approveLeaveRequest.run({\n    rowIndex: leaveRequestData.rowIndex\n  });\n  sendEmailRequestApprove.run({\n    toEmail: leaveRequestData.Email\n  });\n  listStaff.run();\n  listLeaveRequested.run();\n}"
    ],
    "userSetOnLoad": false,
    "confirmBeforeExecute": false,
    "policies": [],
    "userPermissions": []
  },
  "id": "Manage Leave Request_LeaveRequestApi.approveRequest",
  "deleted": false,
  "gitSyncId": "63a05b5f4f35af560dc135d6_63a6c0bf647efb486b76f0d1"
}